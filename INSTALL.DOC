		INSTALLING GRAM'S COMMANDER v3.3
		================================

NB NB NB: You MUST have the current directory in your path for the
        installation to work (under DOS this is always the case).
        Under UNIX, you can ensure this by typing:

        PATH=$PATH:.

        before doing the make (this assumes you are using the Bourne
        or Korn shells).


The configuration of the Makefile for gc v3.3 is automated.
The way it works is like this:

0) You unpack the gc sources in a suitable directory.

1) You invoke `make' with either `make dos' or `make unix',
	depending on your OS.

2) `make' compiles and runs a program called `gcconfig'. You
	are likely to see lots of warnings when it compiles;
	you can ignore them. 

3) `gccconfig' asks you some questions about your system, and 
	where you want to install gc3. In each case it attempts
	to identify possible choices and presents you with a list
	of these, as well as a default answer. After you have 
	answered all the questions, gccconfig creates a file
	called `site.def' with makefile definitions for your
	system, one called `site.ans' which saves your answers
	to use as the defaults the next time it is run, and one
	called `gcsite.h' which is used for conditional compilation
	specific to your site.

4) `make' concatenates the `site.def' file with the generic part
	of the target makefile (named `Makefile.gen'), to
	create the site-dependent makefile `Makefile.2'.

5) `make' then recursively invokes itself with a `-f Makefile.2'
	argument to build the sources.

If you pass arguments to the initial make (such as `make install')
these will be used in the invocation of make with Makefile.2 as
well.

The method probably isn't foolproof, so the details of the `site.def'
file are described later in this document. With any luck, you will
never have to worry about these details.

One problem that may occur under DOS is that you get an `out of
environment space' error upon the nested invocation of `make'. If
this happens, just start the make again by typing `make -f Makefile.2'.

One of the questions under UNIX is `What is your target architecture?'. 
If your architecture is listed amongst the choices, select it. If not, 
select the `Generic System V/BSD' choice.

Other questions include:

 * your compiler (initial default is Gnu's gcc if you have it,
	otherwise an ANSI cc is assumed. The exception is under
	SunOS where you must use /usr/5bin/cc to enable a decent
	curses(3) library)

 * which directory GC should be installed in (initial default is
	/home/bin, if it exists, else /local/bin, if it exists,
	else /usr/bin)

 * whether debugging info should be included. If you answer
	`y', the debug option in the script language can be 
	used to turn a debugging log on and off, and the programs
	will be compiled with symbolic debugging information.
	The debugging log is created in the file in which gc3
	is started up, and has the name `gc3.log'. This is probably
	not of interest to most people except those who are having
	difficulty debugging a gc3 script. 

Under UNIX you will also be asked:

 * which directory holds your manual pages (initial default is
	/usr/share/man, if it exists, else /usr/man)

 * which section of the manual the manual pages should be placed in
	(if there is an `l' (local) section, it is the default, else if
	under SCO and there is a `.LOCAL' or `.CMD' section, it is
	used, else `1' (user commands) is assumed).

Under DOS you will also be asked:

	Do you have Ralf Brown's Spawn0 EMS/XMS swapper?

Spawn0 is a public domain spawn() routine for DOS which gc3 can
use if you have it. This allows gc3 to be swapped out of the
low (640kb) memory area when you run a command. This is almost
essential under DOS, as without it, you will have `out of memory'
problems with a lot of commands (for example, you will be able to
unzip files but not zip them). Spawn0 is available from Simtel
mirroring ftp sites on the Internet.

For any question you can just press ENTER to use the default value 
which is shown within square brackets.

(UNIX only) Once you have been asked all of the questions, a list
	of your responses will be shown and you will be asked for
	confirmation. Type `y' and press ENTER if everything is OK;
	`n' otherwise. In the latter case you will be asked the questions
	again.

Once past the questions, gc3 should be built. If at some point you
see some messages about reading a script file, followed by some
numbers flashing by and a message `Compilation successful!', 
then the build has been completed successfully.

If the make fails, please send me e-mail describing the errors
encountered. Please enclose copies of the site.def and gcsite.h 
files generated by gcconfig, and give me the details of your system
and compiler, and I will try to solve the problem.

If you know something about C and Makefiles, you may be able to
work around the problem yourself; see the second part of this file 
for details about hand-customising the site.def file.

[gc3 compiles and runs under MS-DOS with Borland or Turbo C/C++ v3.x.]

If all goes well, you can install gc3 by doing a `make install'
(on UNIX you should have superuser privileges).

[ NB Second part of this file has been removed in the publicly
     distributed version ]


